#=======================================================#
#                   Basic Unicode Data                  #
#=======================================================#

# Character definitions/comments

['name']
    # UnicodeData.txt
    header = 'definition'
    formatter = 'Definition'
    index = 'Fulltext'

['Unicode 1.0 name',
 #'10646 comment field',
 #'glyph information', # was "codepoint comments" ??? ===============================
 'conscript name',
 'named aliases']
    # UnicodeData.txt
    header = 'definition'
    formatter = 'Definition'
    index = 'Fulltext' # FIXME: MOVE INTO "NAME"? ======================================

#=======================================================#
#                    Unicode General                    #
#=======================================================#

[# Derived properties
 'core properties',   # DerivedCoreProperties.txt
 'age',               # DerivedAge.txt
 
 # Rendering/case folding/display etc
 'east asian width',  # EastAsianWidth.txt
 'property list',     # PropList.txt
 
 'core properties',
 'age']
    header = 'Unicode general'
    formatter = 'StringEnum'
    index = 'StringKeys'

['case folding status']
    # CaseFolding.txt (column #2)
    header='Unicode general'
    formatter = 'StringEnum'
    index = 'StringKeys'

# Unicode General
['general category']
    # UnicodeData.txt
    header = 'Unicode general'
    formatter = 'StringEnum'
    index = 'StringKeys'

#=======================================================#
#                   Layout Properties                   #
#=======================================================#

[# LineBreak.txt
 'line break',
 # ArabicShaping.txt
 'arabic shaping type',
 'arabic shaping group',
 # + Extracted/auxiliary Info
 'joining type',      # 'extracted/DerivedJoiningType.txt'
 'grapheme break',    # 'auxiliary/GraphemeBreakProperty.txt'
 'sentence break',    # 'auxiliary/SentenceBreakProperty.txt'
 'word break']        # 'auxiliary/WordBreakProperty.txt'
    header = 'layout'
    formatter = 'StringEnum'
    index = 'StringKeys'

[# BidiMirroring.txt
 'bidi mirroring',
 # CompositionExclusions.txt
 'composition exclusions']
    header = 'layout'
    formatter = 'StringEnum'
    index = None

# Layout properties
['canonical combining classes',
 'bidirectional category']
    # UnicodeData.txt
    header = 'layout'
    formatter = 'StringEnum'
    index = 'StringKeys'

['mirrored']
    # UnicodeData.txt
    header = 'layout'
    formatter = 'StringEnum'
    index = None

#=======================================================#
#                    Scripts/Blocks                     #
#=======================================================#

# Blocks/scripts
['block', 
 'script', 
 'conscript blocks']
    header = 'scripts/blocks'
    formatter = 'StringEnum'
    index = 'StringKeys'

#self.DSupIdx['General Scripts'] = get_D_sup_scripts(self.DKeys['general scripts'], 
#                                                    self.DKeys['general blocks'])

#self.names_list(FIXME) # FIXME! ========================================================

#=======================================================#
#                     Normalization                     #
#=======================================================#

#self.normalization_props('DerivedNormalizationProps.txt') FIXME! ===============================

['normalization corrections errors',
 'normalization corrections corrected']
    header = 'normalization'
    formatter = 'UnicodeHex'
    index = None

#=======================================================#
#                     Case Folding                      #
#=======================================================#

['case folding']
    # CaseFolding.txt (column #3)
    header = 'casing'
    formatter = 'UnicodeHex'
    index = None

['special casing lower', 
 'special casing title', 
 'special casing upper']
    # SpecialCasing.txt
    header = 'casing'
    formatter = 'UnicodeHex'
    index = None

['special casing condition list']
    # SpecialCasing.txt
    header = 'casing'
    formatter = 'NoFormatStrings'
    index = None

# Casing
['uppercase', 
 'lowercase', 
 'titlecase']
    # UnicodeData.txt
    header = 'casing'
    formatter = 'UnicodeHex'
    index = None

#DTypes['Character Decomposition Mapping'] = ('StringData', 'StringKeys', 'Enum', 'Casing') # ???
#DTypes['Named Sequences Provider'] = 'StringData'

#=======================================================#
#                    Numeric Values                     #
#=======================================================#

# Numeric values
['decimal digit value', 
 'digit value', 
 'numeric value']
    # UnicodeData.txt
    header = 'numeric'
    formatter = 'NoFormatStrings'
    index = 'StringKeys'

#=======================================================#
#                    Named Aliases                      #
#=======================================================#

['block description', # u'Tibetan'
 'block name', # "Basic Latin"
 'subblock heading', # [u'Syllable']
 'subblock technical notice'] # [u'For viram punctuation, use the generic Indic 0964 and 0965.']
    header = 'named aliases'
    formatter = 'Definition'
    index = 'FIXME'

['subblock see also'] # [(codepoint, name/None), ...]
    header = 'named aliases'
    formatter = 'MappingLink'
    index = 'FIXME'


['name', # (unicode string)
 'also called', # [alias 1, alias 2, ...]
 'formally also called', # "
 'technical notice', # [notice 1, notice 2, ...]
 'comments'] # '\n'-joined unicode string
    header = 'named aliases'
    formatter = 'Definition'
    index = 'Fulltext'

['see also', # (codepoint, name)
 'decomposed form', # (mapping, mapping type, name)
 'compatibility mapping'] # "
    header = 'named aliases'
    formatter = 'MappingLink'
    index = 'FIXME'

#=======================================================#
#              Normalization Properties                 #
#=======================================================#

['FC NFKC closure',
 'NFKC casefold']
    # DerivedNormalizationProps.txt
    # FC_NFKC -> FC_NFKC_Closure (mapping)
    # NFKC_CF -> NFKC_Casefold (mapping)
    header = 'normalization'
    formatter = 'UnicodeHex'
    index = 'StringKeys'

['full composition exclusion',
 'changes when NFKC casefolded']
    # DerivedNormalizationProps.txt
    # Full_Composition_Exclusion
    # Changes_When_NFKC_Casefolded
    header = 'normalization'
    formatter = 'BooleanEnum'
    default = False

['NFD quick check',
 'NFC quick check',
 'NFKD quick check',
 'NFKC quick check']
    # DerivedNormalizationProps.txt
    # NFD_QC -> NFD_Quick_Check (N -> No; M -> Maybe; all others Y by default)
    # NFC_QC -> NFC_Quick_Check
    # NFKD_QC -> NFKD_Quick_Check
    # NFKC_QC -> NFKC_Quick_Check
    header = 'normalization'
    formatter = 'StringEnum'
    default = 'Y'
    values = {'Y': 'yes',
              'N': 'no',
              'M': 'maybe'}

['expands on NFD',
 'expands on NFC',
 'expands on NFKD',
 'expands on NFKC']
    # DerivedNormalizationProps.txt
    # Expands_On_NFD
    # Expands_On_NFC
    # Expands_On_NFKD
    # Expands_On_NFKC
    header = 'normalization'
    formatter = 'BooleanEnum'
    default = False
